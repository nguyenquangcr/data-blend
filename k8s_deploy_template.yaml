apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubernetes.io/change-cause: "${CI_COMMIT_MESSAGE}"
  labels:
    app: ${APP_NAME}
  name: ${APP_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${APP_NAME}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ${APP_NAME}
    spec:
      hostAliases:
        - ip: '172.24.181.4'
          hostnames:
            - 'dmc.fpt.vn'
      containers:
        - name: ${APP_NAME}
          image: ${IMAGE_TAG}
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: ${POD_LIMIT_CPU}
              memory: ${POD_LIMIT_MEMORY}
            requests:
              cpu: ${POD_REQUEST_CPU}
              memory: ${POD_REQUEST_MEMORY}
          lifecycle:
            preStop:
              exec:
                command: ['/bin/bash', '-c', 'sleep 15']

---
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}
  labels:
    app: ${APP_NAME}
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: ${APP_NAME}
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: '100m'
    nginx.org/client-max-body-size: '100m'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: Deny";
      more_set_headers "X-Xss-Protection: 1; mode=block";
      more_set_headers "X-Content-Type-Options: nosniff";

  name: ${APP_NAME}
spec:
  rules:
    - host: ${HOST_APP}
      http:
        paths:
          - backend:
              serviceName: ${APP_NAME}
              servicePort: 80
            path: /micro/bundle/di
